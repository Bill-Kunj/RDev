 new Log, uriCh,
stdout(`rho:io:stdout`),
insertArbitrary(`rho:registry:insertArbitrary`) in {
    contract Log(return) = {
        new logCh, myLog in{
            logCh!([]) | 
            return!(*myLog) |
            contract myLog(message, return) = {
                for(list <- logCh) {
                    logCh!(*list ++ [*message]) |
                    return!(true)
                }
            } |
            contract myLog(return) = {
                for(list <- logCh) {
                    return!(*list) |
                    logCh!([])
                }
            }
        }
    } |
    insertArbitrary!(*Log, *uriCh) |
        for(@uri <- uriCh) {
          stdout!(["Log contract created at",uri])
        } |
new return, ack, ack2, ack3, ack4, out in {
  Log!(*return) |
   for (mylog <- return) {
    mylog!("the first thing",*ack) |
    mylog!("the 2nd thing",*ack2) |
    mylog!("the 3rd thing",*ack3) |
    mylog!("the 4th thing",*ack4) |
    for ( _ <- ack;  _ <- ack2;  _ <- ack3;  _ <- ack4 ) {
     mylog!(*out) |
     for ( result <- out) {
      stdout!(*result)
}}}}
}
