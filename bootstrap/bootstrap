#!/bin/bash

YES="$1"

[ -n "$1" ] && shift

! cd "$(dirname "$0")" && echo "Could not cd to script directory" && exit 1

ME=$(basename "$0")

! ./stop-rnode "$YES" && exit $?

[ "$YES" != '-y' ] && [ -d ~/.rnode ] && echo "
$ME: $HOME/.rnode exists. Use 'rm -rf $HOME/.rnode' to fix.
" && while read -r -p "$ME: Execute 'rm -rf $HOME/.rnode' [y]? " response;do
	if [ "$response" == "y" ] || [ -z "$response" ];then
		echo "Removing $HOME/.rnode"
		break
	else
		echo "$ME: Aborting $ME"
		exit 1
	fi
done

rm -rf "$HOME"/.rnode
mkdir -p snapshot log generated 2>/dev/null

[ "$YES" != '-y' ] && ./list-snapshot | grep "$ME" >/dev/null 2>&1 && echo "
$ME snapshot exists.
" && while read -r -p "Use snapshot instead of re-running $ME [y]? " response;do
	if [ "$response" == "y" ] || [ -z "$response" ];then
		./restore-snapshot "$YES" "$ME"
		exit 0
	else
		"$ME: Rerunning $ME"
		break
	fi
done

echo "Rerunning $ME"
LOGFILE="log/$ME.log"

private_key=$(cat PrivateKeys/pk.bootstrap)

mkdir -p ~/.rnode || exit 3
tar cf - genesis|(cd ~/.rnode; tar xvf -) || exit 3

touch "$LOGFILE"

rnode run -s \
	--validator-private-key "$private_key" \
	--dev-mode \
	-XX:MaxDirectMemorySize=100m -XX:MaxRAMPercentage=25 \
	> "$LOGFILE" 2>&1 &

PID=$!

# The previous command doesn't produce output -- but this one makes up for that
while true;do
	# shellcheck disable=SC2030
	tail -1 "$LOGFILE" | while read -r line;do
		echo "$line"
		if echo "$line"|grep 'Making a transition to Running state.';then
			break 2;
		fi
	done
	sleep 1
done

echo "$ME: Stopping $ME rnode process"
sleep 3 && kill $PID && wait "$PID"

echo "$ME: Creating snapshot '$ME'"
./create-snapshot "$YES" "$ME"

stty echo

# exit 0 is for github actions
exit 0
